version: '3.8'

services:
  compliance-sentinel-mcp:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: compliance-sentinel-mcp
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - COMPLIANCE_SENTINEL_ENV=production
      - COMPLIANCE_SENTINEL_LOG_LEVEL=INFO
      - COMPLIANCE_SENTINEL_CACHE_ENABLED=true
      - COMPLIANCE_SENTINEL_RATE_LIMIT_ENABLED=true
      - COMPLIANCE_SENTINEL_AUTH_ENABLED=true
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - compliance-sentinel
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  redis:
    image: redis:7-alpine
    container_name: compliance-sentinel-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - compliance-sentinel
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: compliance-sentinel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - compliance-sentinel
    depends_on:
      - compliance-sentinel-mcp
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  compliance-sentinel:
    driver: bridge