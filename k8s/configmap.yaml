apiVersion: v1
kind: ConfigMap
metadata:
  name: compliance-sentinel-config
  namespace: compliance-sentinel
data:
  # Application configuration
  app.yaml: |
    environment: production
    log_level: INFO
    debug: false
    
    # Security settings
    security:
      jwt_expiration: 3600
      password_min_length: 8
      max_login_attempts: 5
      lockout_duration: 300
    
    # Analysis settings
    analysis:
      max_file_size: 10485760  # 10MB
      timeout: 300  # 5 minutes
      parallel_workers: 4
      batch_size: 100
    
    # Monitoring settings
    monitoring:
      metrics_enabled: true
      health_check_interval: 30
      alert_cooldown: 300
    
    # Cache settings
    cache:
      ttl: 3600
      max_size: 1000
      cleanup_interval: 300

  # Nginx configuration
  nginx.conf: |
    upstream compliance_sentinel {
        least_conn;
        server compliance-sentinel-service:8000 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req zone=api burst=20 nodelay;
        
        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API endpoints
        location /api/ {
            proxy_pass http://compliance_sentinel;
            proxy_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Health check
        location /health {
            proxy_pass http://compliance_sentinel;
            access_log off;
        }
        
        # Static files
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

  # Prometheus configuration
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      - job_name: 'compliance-sentinel'
        static_configs:
          - targets: ['compliance-sentinel-service:8000']
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)

  # Alert rules
  alert-rules.yml: |
    groups:
      - name: compliance-sentinel
        rules:
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} errors per second"
          
          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes / container_spec_memory_limit_bytes > 0.9
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage"
              description: "Memory usage is above 90%"
          
          - alert: ServiceDown
            expr: up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Service is down"
              description: "{{ $labels.instance }} is down"